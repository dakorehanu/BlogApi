package com.Phoenix.blogApis.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Phoenix.blogApis.Api_constants.Api_constants;
import com.Phoenix.blogApis.Payloads.ApiResponse;
import com.Phoenix.blogApis.Payloads.UserDTO;
import com.Phoenix.blogApis.Service.Impl.UserServiceImpl;

@RestController
@RequestMapping("/api")
public class UserController {

	@Autowired
	public UserServiceImpl userServiceImpl;	
	
	
	// Post-create
	/**
	 * @author Raviraj Patil
	 * @apiNote Create Users
	 * @since 1.0
	 * @param userDto
	 * @return
	 */
	@PostMapping(value="/users")
	public ResponseEntity<UserDTO> createUser(@RequestBody UserDTO userDto){
		UserDTO createUser = userServiceImpl.createUser(userDto);
		
		return new ResponseEntity<>(createUser,HttpStatus.CREATED);
	}
	
	
	
	//Put-Update
	@PutMapping("/users{id}")
	public ResponseEntity<UserDTO> updateuser(@RequestBody UserDTO userDto,@PathVariable Integer id){
		UserDTO updateUser = this.userServiceImpl.updateUser(userDto, id);
		
		
		
		return new ResponseEntity<UserDTO>(updateUser,HttpStatus.OK);
		
	}
	
	//Get-User Get
	public ResponseEntity<UserDTO> getUserById(@PathVariable Integer id){
		
		 UserDTO userById = this.userServiceImpl.getUserById(id);
		return new ResponseEntity<UserDTO>(userById,HttpStatus.FOUND);
		
	}
	
	
	//Delete - user delete
	public  ResponseEntity<ApiResponse> deleteuser(@PathVariable Integer id){
		this.userServiceImpl.deleteUser(id);
		
		return new ResponseEntity<ApiResponse>(new ApiResponse(Api_constants.DELETE_USER,true),HttpStatus.OK);
		
	}
	
	
	
}
